<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Source-git Documentation on Packit</title>
    <link>https://packit.dev/docs/source-git/</link>
    <description>Recent content in Source-git Documentation on Packit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jun 2020 23:59:59 +0100</lastBuildDate><atom:link href="https://packit.dev/docs/source-git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to source-git?</title>
      <link>https://packit.dev/docs/source-git/how-to-source-git/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://packit.dev/docs/source-git/how-to-source-git/</guid>
      <description>This is a practical introduction to source-git using a real example.
If you are interested in the theory behind source-git, please read the specification.
Let&amp;rsquo;s create a source-git repo I choose systemd from Fedora 31 for this example.
What do we need? 3 things:
 Systemd upstream repo. Fedora 31 dist-git repo of systemd. New local git repo.  Let&amp;rsquo;s set all of this up. We&amp;rsquo;ll start with an empty git repository:</description>
    </item>
    
    <item>
      <title>Working with source-git</title>
      <link>https://packit.dev/docs/source-git/work-with-source-git/</link>
      <pubDate>Wed, 24 Jun 2020 23:59:59 +0100</pubDate>
      
      <guid>https://packit.dev/docs/source-git/work-with-source-git/</guid>
      <description>This document is focused on how packit treats a source-git repo.
If you are looking for the design concept of source-git, please head on here: docs/source-git-design
In short, the source-git concept is fairly simple - take an upstream repo and shove downstream content on top of it. Easy right?
Packit is then able to work with such a repo and:
  Create SRPMs
  Sync the state into dist-git</description>
    </item>
    
    <item>
      <title>Source-git design</title>
      <link>https://packit.dev/docs/source-git/design/</link>
      <pubDate>Mon, 31 Dec 2018 23:59:59 +0100</pubDate>
      
      <guid>https://packit.dev/docs/source-git/design/</guid>
      <description>&lt;h3 id=&#34;source-git-is-the-place-where-the-manual-work-is-done&#34;&gt;Source git is the place where the manual work is done&lt;/h3&gt;
&lt;p&gt;This document serves as a detailed description of source-git. Please bear in
mind that some things are a subject to change — the overall design is pretty
solid, but details may be tinkered over time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authors&lt;/strong&gt;: Stef Walter, Tomas Tomecek&lt;/p&gt;
&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;Content of source-git repository is equivalent to dist-git, but uses upstream
format: source files instead of tarballs, git commits instead of patches.&lt;/p&gt;
&lt;p&gt;You can host this repository, or the specific git branch, anywhere you want. If
you open a pull request, you will receive feedback on the changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the package build with the changes?&lt;/li&gt;
&lt;li&gt;Do all the package tests pass?&lt;/li&gt;
&lt;li&gt;How about tests of the dependant packages?&lt;/li&gt;
&lt;li&gt;Are the changes good to be included in Fedora?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The goal of packit is to provide automation and tooling to interact with
source-git repositories so you don&amp;rsquo;t have to touch dist-git ever again. Our
plan is to center development experience around upstream repositories and
source-git.&lt;/p&gt;
&lt;p&gt;Upstream repositories and source-git repositories are pretty much the same
thing. Creating source-git only makes sense when the upstream does not accept
downstream spec file or adding spec file to such a project doesn&amp;rsquo;t make sense.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
